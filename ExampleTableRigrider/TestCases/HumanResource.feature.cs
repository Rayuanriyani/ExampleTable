// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ExampleTableRigrider.TestCases
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("HumanResource")]
    public partial class HumanResourceFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "HumanResource.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "HumanResource", "\tCreate People/Designation/Location in HR maintenance on the web Rigrider", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HR_01 Mananger can be access Human Resource Page")]
        [NUnit.Framework.CategoryAttribute("HR_Maintenance")]
        public virtual void HR_01ManangerCanBeAccessHumanResourcePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HR_01 Mananger can be access Human Resource Page", new string[] {
                        "HR_Maintenance"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("Access the rigrider web portal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("Login as rigrider administrator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When("Navigate to the HR Maintenance Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("The HR Maintenance Page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HR_02 Manager can be access all Tab in HR maintenance Page")]
        [NUnit.Framework.CategoryAttribute("HR_Maintenance")]
        public virtual void HR_02ManagerCanBeAccessAllTabInHRMaintenancePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HR_02 Manager can be access all Tab in HR maintenance Page", new string[] {
                        "HR_Maintenance"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("Navigate to the HR Maintenance Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.And("Click on the Tab People", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.When("Click on the Tab Designation", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.And("Click on the Tab Location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.Then("All Tabs can be clicked and displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HR_03 Manager can be Created People in People Tab - Dictionary")]
        [NUnit.Framework.CategoryAttribute("HR_Maintenance")]
        public virtual void HR_03ManagerCanBeCreatedPeopleInPeopleTab_Dictionary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HR_03 Manager can be Created People in People Tab - Dictionary", new string[] {
                        "HR_Maintenance"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("Navigate to the HR Maintenance Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.And("Click on the Tab People", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("Click on the Create People Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table1.AddRow(new string[] {
                        "Identifier",
                        "OM-005"});
            table1.AddRow(new string[] {
                        "Firstname",
                        "Jhordy"});
            table1.AddRow(new string[] {
                        "Lastname",
                        "Biim"});
            table1.AddRow(new string[] {
                        "Display Name",
                        "Jhordy Biim"});
            table1.AddRow(new string[] {
                        "Organization",
                        "Operator Machine"});
#line 24
 testRunner.And("Create name on the people for Dictionary", ((string)(null)), table1, "And ");
#line 31
 testRunner.And("Click on the save button for people", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.Then("the Name People is \"Jhordy Biim\" can be added and shown in overview list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HR_04 Manager can be Created People in People Tab - Table into DataTable")]
        public virtual void HR_04ManagerCanBeCreatedPeopleInPeopleTab_TableIntoDataTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HR_04 Manager can be Created People in People Tab - Table into DataTable", ((string[])(null)));
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
 testRunner.Given("Navigate to the HR Maintenance Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.And("Click on the Tab People", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.When("Click on the Create People Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Identifier",
                        "Firstname",
                        "Lastname",
                        "Display Name",
                        "Organization"});
            table2.AddRow(new string[] {
                        "OM-005",
                        "Sherly",
                        "Catherina",
                        "Sherly Catherina",
                        "Engineering"});
#line 38
 testRunner.And("Create name on the people for CreateSet in SpecFlow Table", ((string)(null)), table2, "And ");
#line 41
 testRunner.And("Click on the save button for people", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.Then("the Name People is \"Sherly Catherina\" can be added and shown in overview list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HR_05 Mananger can be Created Designation in Designation Tab")]
        [NUnit.Framework.CategoryAttribute("HR_Maintenance")]
        public virtual void HR_05ManangerCanBeCreatedDesignationInDesignationTab()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HR_05 Mananger can be Created Designation in Designation Tab", new string[] {
                        "HR_Maintenance"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
 testRunner.Given("Navigate to the HR Maintenance Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
 testRunner.And("Click on the Designation Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.When("Click on the Create Designation Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.And("Fill in the name Designation with \"Operator Machine\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("Click on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.Then("the Name Designation is \" Operator Machine \" can be added and shown in overview l" +
                    "ist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
